--// CLEANUP OLD DETECTION
for _, v in ipairs(workspace:GetChildren()) do
    if v:IsA("Part") and v.Name == "DetectionBox" then
        v:Destroy()
    end
end

for _, gui in ipairs(game.Players.LocalPlayer:WaitForChild("PlayerGui"):GetChildren()) do
    if gui:IsA("ScreenGui") and gui.Name == "DetectionToggleGui" then
        gui:Destroy()
    end
end

--// VARIABLES
local player = game.Players.LocalPlayer
local runService = game:GetService("RunService")
local soccerBall = workspace:WaitForChild("FootballField"):WaitForChild("SoccerBall")
local kickBallRemote = game:GetService("ReplicatedStorage"):WaitForChild("KickBall")

local detectionEnabled = true
local lastKickTime = 0
local boxSize = 10
local detectionLoop = nil

--// DETECTION BOX SETUP
local box = Instance.new("Part")
box.Name = "DetectionBox"
box.Size = Vector3.new(boxSize, boxSize, boxSize)
box.Anchored = true
box.CanCollide = false
box.Transparency = 0.8
box.Color = Color3.new(1, 1, 1)
box.Material = Enum.Material.ForceField
box.Parent = workspace

--// GUI SETUP
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "DetectionToggleGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Toggle Button
local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0, 100, 0, 30)
toggleButton.Position = UDim2.new(0, 10, 0, 10)
toggleButton.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
toggleButton.TextColor3 = Color3.new(1, 1, 1)
toggleButton.Text = "Detection: ON"
toggleButton.Parent = screenGui

-- Size Box
local sizeBox = Instance.new("TextBox")
sizeBox.Size = UDim2.new(0, 100, 0, 30)
sizeBox.Position = UDim2.new(0, 10, 0, 50)
sizeBox.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
sizeBox.TextColor3 = Color3.new(1, 1, 1)
sizeBox.Text = tostring(boxSize)
sizeBox.PlaceholderText = "Box Size"
sizeBox.Parent = screenGui

-- Update box size on input
sizeBox.FocusLost:Connect(function(enterPressed)
    if enterPressed then
        local newSize = tonumber(sizeBox.Text)
        if newSize and newSize > 0 then
            boxSize = newSize
            box.Size = Vector3.new(boxSize, boxSize, boxSize)
        else
            sizeBox.Text = tostring(boxSize)
        end
    end
end)

-- Function to check if ball is within box
local function isBallInBox(ballPos, hrpPos)
    local halfSize = boxSize / 2
    local dx = math.abs(ballPos.X - hrpPos.X)
    local dy = math.abs(ballPos.Y - hrpPos.Y)
    local dz = math.abs(ballPos.Z - hrpPos.Z)
    return dx <= halfSize and dy <= halfSize and dz <= halfSize
end

-- Re-bindable detection logic
local function startDetectionLoop()
    if detectionLoop then return end

    detectionLoop = task.spawn(function()
        while detectionEnabled do
            task.wait(0.1)

            local character = player.Character or player.CharacterAdded:Wait()
            local hrp = character:FindFirstChild("HumanoidRootPart")
            if not hrp or not soccerBall then continue end

            box.Position = hrp.Position

            if isBallInBox(soccerBall.Position, hrp.Position) then
                local currentTime = tick()
                if currentTime - lastKickTime >= 0.4 then
                    lastKickTime = currentTime

                    local directionVector = (soccerBall.Position - hrp.Position)
                    if directionVector.Magnitude < 1 then
                        directionVector = Vector3.new(0, 1, 0)
                    end

                    local direction = directionVector.Unit * 1200
                    local power = 8000

                    local args = {
                        hrp.Position,
                        direction,
                        Vector3.zero,
                        power,
                        "djhtelkds"
                    }

                    kickBallRemote:FireServer(unpack(args))

                    -- ðŸ‘‡ Force client-side ball update
                    soccerBall.Velocity = direction.Unit * 0.01
                end
            end
        end
        detectionLoop = nil
    end)
end

-- GUI toggle behavior
toggleButton.MouseButton1Click:Connect(function()
    detectionEnabled = not detectionEnabled
    toggleButton.Text = detectionEnabled and "Detection: ON" or "Detection: OFF"
    if detectionEnabled then
        startDetectionLoop()
    end
end)

-- Start immediately
startDetectionLoop()

-- Follow player with box
runService.RenderStepped:Connect(function()
    local character = player.Character
    if character and character:FindFirstChild("HumanoidRootPart") then
        box.Position = character.HumanoidRootPart.Position
    end
end)
